import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	static int N,M,x,y,K;
	static int[][] ar;
	static int[] dice = {0,0,0,0,0,0};
	static int[] dx = {0,0,0,-1,1}; // 세로
	static int[] dy = {0,1,-1,0,0}; // 가로
	static int[] cmd;
	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken()); 
		M = Integer.parseInt(st.nextToken()); // 배열의 크기
		x = Integer.parseInt(st.nextToken()); // 세로 좌표
		y = Integer.parseInt(st.nextToken()); // 가로 좌표
		K = Integer.parseInt(st.nextToken()); // 명령 횟수
		
		ar = new int[N][M];
		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j = 0; j < M; j++) {
				ar[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		cmd = new int[K];
		st = new StringTokenizer(br.readLine());
		for (int i = 0; i < K; i++) {
			cmd[i] = Integer.parseInt(st.nextToken());
			setdice(cmd[i]);
		}
	}
	
	static void setdice(int d) {
		y += dy[d];
		x += dx[d];
		int temp = dice[2];
		if(x < 0 || x >= N || y < 0 || y >= M) {
			y -= dy[d];
			x -= dx[d];
			return;
		}
//		System.out.println("방향 : ");
//		System.out.println("방향 "+d);
		switch(d) {
		case 1: // 동쪽
			dice[2] = dice[3];
			dice[3] = dice[5];
			dice[5] = dice[1];
			dice[1] = temp;
			break;
		case 2: // 서쪽
			dice[2] = dice[1];
			dice[1] = dice[5];
			dice[5] = dice[3];
			dice[3] = temp;
			break;
		case 3: // 북쪽
			dice[2] = dice[0];
			dice[0] = dice[5];
			dice[5] = dice[4];
			dice[4] = temp;
			break;
		case 4: // 남쪽
			dice[2] = dice[4];
			dice[4] = dice[5];
			dice[5] = dice[0];
			dice[0] = temp;
			break;
		}
		
		if(ar[x][y] == 0) {
			ar[x][y] = dice[5];
		}
		else {
			dice[5] = ar[x][y];
			ar[x][y] = 0;
		}
		System.out.println(dice[2]);
	}
}
